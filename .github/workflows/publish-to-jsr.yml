name: "Publish to JSR"

on:
  push:
    tags:
      - '*'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
  eslint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Enable Corepack
        run: corepack enable
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Lint DIVE
        run: yarn lint
  unit-test:
    runs-on: ubuntu-latest
    needs: eslint
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Enable Corepack
        run: corepack enable
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Unit-Test DIVE (coverage)
        run: yarn test-coverage
  build:
    runs-on: ubuntu-latest
    needs: eslint
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Enable Corepack
        run: corepack enable
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Build DIVE
        run: yarn build

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: [unit-test, build]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Enable Corepack
        run: corepack enable
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Publish DIVE Dry-Run (testing with JSR)
        run: yarn dlx jsr publish --dry-run

