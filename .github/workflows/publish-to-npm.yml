name: "Publish to npm"

on:
  push:
    branches:
      - trunk

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Setup Node.js
        uses: actions/setup-node@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
  eslint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Lint DIVE
        run: yarn lint
  unit:
    runs-on: ubuntu-latest
    needs: eslint
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Unit-Test DIVE
        run: yarn unit
  publish:
    runs-on: ubuntu-latest
    needs: unit
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Search for cached dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Build DIVE
        run: yarn build
      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: 'DIVE[bot]'
          GITHUB_EMAIL: 'f.frank@shopware.com'
        with:
          tag-prefix:  'v'
          target-branch: 'trunk'
          commit-message: 'DIVE[bot]: Release {{version}} [skip ci]'
          skip-push:  'true'
          skip-tag:  'true'
      - name: 'Add Build files'
        run: git add ./build -f && git add README.md -f && echo "Staged Build files. Status:" && git status && echo "Ammending commit..." && git commit --amend --no-edit && echo "Commit ammended. Status:" && git status
      - name: 'Add tag'
        run: git tag -a v$(node -p "require('./package.json').version") -m "Release v$(node -p "require('./package.json').version")"
      - name: Push to protected branch trunk
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.ACTION_AUTH_TOKEN }}
          branch: trunk
          unprotect_reviews: true
          tags: true
          force: true
      - name: Publish DIVE to npm
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: "public"
          dry-run: false

