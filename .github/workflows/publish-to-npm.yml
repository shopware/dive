name: "Publish to npm"

on:
  push:
    branches:
      - trunk

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Setup Node.js
        uses: actions/setup-node@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
  eslint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Lint DIVE
        run: yarn lint
  unit:
    runs-on: ubuntu-latest
    needs: eslint
    steps:
      - name: Checkout DIVE
        uses: actions/checkout@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install DIVE dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Unit-Test DIVE
        run: yarn unit
  build:
    runs-on: ubuntu-latest
    needs: eslint
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Build DIVE
        run: yarn build
  bump-version:
    runs-on: ubuntu-latest
    needs: [unit, build]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Search for cached dependencies
        uses: actions/cache@main
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Bump version
        run: yarn version --patch && git push --follow-tags
  publish:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Search for cached dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies (if cache not found)
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Publish DIVE to npm
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: "public"

